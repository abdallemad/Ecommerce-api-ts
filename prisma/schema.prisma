// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  user
  admin
}

model User {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  email    String    @unique
  password String
  role     Role      @default(user) // Set default value to Role.user
  products Product[]
  reviews  Review[]
}

model Product {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  price         Float    @default(0)
  description   String
  image         String
  category      String
  company       String
  colors        String[]
  featured      Boolean  @default(false)
  freeShipping  Boolean  @default(false)
  inventory     Int      @default(15)
  averageRating Float    @default(0)
  image_id      String
  userId        String   @db.ObjectId
  user          User     @relation(fields: [userId], references: [id])
  reviews       Review[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Review {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  rating    Float
  comment   String
  userId    String  @db.ObjectId
  user      User    @relation(fields: [userId], references: [id])
  productId String  @db.ObjectId
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@unique([userId, productId])
}
